CC = clang
CFLAGS = -g -O2 -Wall -Wextra -Isrc -rdynamic -DNDEBUG $(OPTFLAGS)
LIBS = -ldl $(OPTLIBS)
PREFIX?=/usr/local

SOURCES=$(wildcard src/**/*.c src/*.c)
#although Slashes lead to issues for followup commands, 
#  with backlashes the wildcard does not work at all
#SOURCES=$(wildcard src\**\*.c src\*.c)
# pattern? substitute?  ->  take all strings of SOURCES and replace all *.c by *.o
OBJECTS=$(patsubst %.c,%.o,$(SOURCES))

TEST_SRC=$(wildcard tests/*_tests.c)
#TEST_SRC=$(wildcard tests\*_tests.c)
TESTS=$(patsubst %.c,%,$(TEST_SRC))
# exe does not work, rather throws an error
#TESTS=$(patsubst %.c,%.exe,$(TEST_SRC))

TARGET=build/liblcthw.a
SO_TARGET=$(patsubst %.a,%.so,$(TARGET))

# The Target Build
all: $(TARGET) $(SO_TARGET) tests

dev: CFLAGS=-g -Wall -Isrc -Wall -Wextra $(OPTFLAGS)
dev: all


# specifies a dependency rule for TARGET
#   fPIC: generate position-independent code (PIC)
$(TARGET): CFLAGS += -fPIC   
$(TARGET): build $(OBJECTS)
	llvm-ar rcs $@ $(OBJECTS)
	llvm-ranlib $@
#	ar rcs $@ $(OBJECTS)
#	ranlib $@

$(SO_TARGET): $(TARGET) $(OBJECTS)
	$(CC) -shared -o $@ $(OBJECTS)

# use makebuild.ps1 instead
build:
	@mkdir -p build
	@mkdir -p bin

# The Unit Tests
.PHONY: tests
tests: CFLAGS += $(TARGET)
tests: $(TESTS)
	sh ./tests/runtests.sh
#	python ./tests/runtests.py

# The Cleaner
# use makeclean.ps1 instead
clean:
	rm -rf build $(OBJECTS) $(TESTS)
	rm -f tests/tests.log
	find . -name "*.gc*" -exec rm {} \;
	rm -rf `find . -name "*.dSYM" -print`

# The Install
install: all
	install -d $(DESTDIR)/$(PREFIX)/lib/
	install $(TARGET) $(DESTDIR)/$(PREFIX)/lib/

# The Checker
check:
	@echo Files with potentially dangerous functions
	@egrep '[^_.>a-zA-Z0-9](str(n?cpy|n?cat|xfrm|n?dup|str|pbrk|tok|_)\
		|stpn?cpy|a?sn?printf|byte_)' $(SOURCES) || true

